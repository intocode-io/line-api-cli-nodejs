{"version":3,"sources":["../../lib/operations/richmenu-unlink-operation.js"],"names":["RichmenuUnlinkOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","userId","type","name","message","cancelOption","unlinkUserRequest","send","console","log","success","error","RichMenuUnlinkUserRequest","accessToken","config","channel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,uBAAN,SAAsCC,kBAAtC,CAAgD;AAK7D,aAAWC,KAAX,GAAmB;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,iCAAiCC,IAD3C;AAEEC,MAAAA,OAAO,EAAG,iBAAD,CAAkBC;AAF7B,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAED,eAAaK,GAAb,GAAmB;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMF,OAAO,CAC9B;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,OAAO,EAAG;AAHZ,KAD8B,EAM9B,KAAKC,YANyB,CAAhC;;AASA,QAAI,CAACJ,MAAL,EAAa;AACX,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAM,KAAKK,iBAAL,CAAuBC,IAAvB,CAA4BN,MAA5B,CAAN;AACAO,MAAAA,OAAO,CAACC,GAAR,CACG,8BAA6BR,MAAM,CAACL,IAAK,EAA1C,CACGc,OAFL;AAID,KAND,CAME,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAjD4D;;;;gBAA1CtB,uB,uBACQ,IAAIuB,kCAAJ,CAA8B;AACvDC,EAAAA,WAAW,EAFMxB,uBAEJ,CAAKyB,MAAL,CAAYC,OAAZ,CAAoBF;AADsB,CAA9B,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport RichMenuUnlinkUserRequest from '../apis/rich-menu-unlink-user-request';\n\nexport default class RichmenuUnlinkOperation extends Operation {\n  static unlinkUserRequest = new RichMenuUnlinkUserRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Unlink user-specific rich menu'.help,\n        content: `richmenu unlink`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n\n    const { userId } = await prompts(\n      {\n        type: 'text',\n        name: 'userId',\n        message: `Unlink menu from which user ID`\n      },\n      this.cancelOption\n    );\n\n    if (!userId) {\n      return false;\n    }\n\n    try {\n      await this.unlinkUserRequest.send(userId);\n      console.log(\n        `Unlinked menu from user ID ${userId.code}`\n          .success\n      );\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"richmenu-unlink-operation.js"}