{"version":3,"sources":["../../lib/operations/liff-list-operation.js"],"names":["LIFFListOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","apps","response","listRequest","send","data","error","console","length","log","info","table","map","app","row","success","liffId","view","type","url","description","features","ble","LIFFListRequest","accessToken","config","channel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,iBAAN,SAAgCC,kBAAhC,CAA0C;AAKvD,aAAWC,KAAX,GAAmB;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,iBAAiBC,IAD3B;AAEEC,MAAAA,OAAO,EAAG,WAAD,CAAYC;AAFvB,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAED,eAAaK,GAAb,GAAmB;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,QAAIC,IAAJ;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM,KAAKC,WAAL,CAAiBC,IAAjB,EAAvB;AAEAH,MAAAA,IAAI,GAAGC,QAAQ,CAACG,IAAT,CAAcJ,IAArB;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,QAAI,CAACL,IAAD,IAASA,IAAI,CAACO,MAAL,KAAgB,CAA7B,EAAgC;AAC9BD,MAAAA,OAAO,CAACE,GAAR,CAAY,qBAAqBC,IAAjC;AACA,aAAO,IAAP;AACD;;AAEDH,IAAAA,OAAO,CAACI,KAAR,CACEV,IAAI,CAACW,GAAL,CAASC,GAAG,IAAI;AACd,YAAMC,GAAG,GAAG,EAAZ;AAEAA,MAAAA,GAAG,CAAC,cAAcC,OAAf,CAAH,GAA6BF,GAAG,CAACG,MAAjC;AACAF,MAAAA,GAAG,CAAC,OAAOC,OAAR,CAAH,GAAsBF,GAAG,CAACI,IAAJ,CAASC,IAA/B;AACAJ,MAAAA,GAAG,CAAC,MAAMC,OAAP,CAAH,GAAqBF,GAAG,CAACI,IAAJ,CAASE,GAA9B;AACAL,MAAAA,GAAG,CAAC,cAAcC,OAAf,CAAH,GAA6BF,GAAG,CAACO,WAAjC;AACAN,MAAAA,GAAG,CAAC,MAAMC,OAAP,CAAH,GACEF,GAAG,CAACQ,QAAJ,IAAgBR,GAAG,CAACQ,QAAJ,CAAaC,GAA7B,GAAmC,QAAnC,GAA8C,QADhD;AAGA,aAAOR,GAAP;AACD,KAXD,CADF;AAeA,WAAO,IAAP;AACD;;AAtDsD;;;;gBAApCvB,iB,iBACE,IAAIgC,wBAAJ,CAAoB;AACvCC,EAAAA,WAAW,EAFMjC,iBAEJ,CAAKkC,MAAL,CAAYC,OAAZ,CAAoBF;AADM,CAApB,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport LIFFListRequest from '../apis/liff-list-request';\n\nexport default class LIFFListOperation extends Operation {\n  static listRequest = new LIFFListRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'List LIFF apps'.help,\n        content: `liff list`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    let apps;\n\n    try {\n      const response = await this.listRequest.send();\n\n      apps = response.data.apps;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    if (!apps || apps.length === 0) {\n      console.log('LIFF app not found'.info);\n      return true;\n    }\n\n    console.table(\n      apps.map(app => {\n        const row = {};\n\n        row['LIFF app ID'.success] = app.liffId;\n        row['Type'.success] = app.view.type;\n        row['URL'.success] = app.view.url;\n        row['Description'.success] = app.description;\n        row['BLE'.success] =\n          app.features && app.features.ble ? '\\u2713' : '\\u2715';\n\n        return row;\n      })\n    );\n\n    return true;\n  }\n}\n"],"file":"liff-list-operation.js"}