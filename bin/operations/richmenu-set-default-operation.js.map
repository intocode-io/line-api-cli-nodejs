{"version":3,"sources":["../../lib/operations/richmenu-set-default-operation.js"],"names":["RichmenuSetDefaultOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","richMenus","response","listRequest","send","data","richmenus","map","menu","title","name","richMenuId","description","chatBarText","areas","length","value","error","console","log","info","type","message","choices","cancelOption","setDefaultRequest","success","RichMenuListRequest","accessToken","config","channel","RichMenuSetDefaultRequest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,2BAAN,SAA0CC,kBAA1C,CAAoD;AAQjD,aAALC,KAAK,GAAG;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,2CAA2CC,IADrD;AAEEC,MAAAA,OAAO,EAAG,kBAAD,CAAmBC;AAF9B,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAEe,eAAHK,GAAG,GAAG;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM,KAAKC,WAAL,CAAiBC,IAAjB,EAAvB;AAEAH,MAAAA,SAAS,GAAGC,QAAQ,CAACG,IAAT,CAAcC,SAAd,GACRJ,QAAQ,CAACG,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4BC,IAAI,IAAI;AAClC,eAAO;AACLC,UAAAA,KAAK,EAAG,GAAED,IAAI,CAACE,IAAK,KAAIF,IAAI,CAACG,UAAW,GADnC;AAELC,UAAAA,WAAW,EAAG,GAAEJ,IAAI,CAACK,WAAY,QAAOL,IAAI,CAACM,KAAL,CAAWC,MAAO,QAFrD;AAGLC,UAAAA,KAAK,EAAER,IAAI,CAACG;AAHP,SAAP;AAKD,OAND,CADQ,GAQR,EARJ;AASD,KAZD,CAYE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,QAAI,CAAChB,SAAS,CAACc,MAAf,EAAuB;AACrBG,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAlC;AACA,aAAO,IAAP;AACD;;AAED,UAAM;AAAET,MAAAA;AAAF,QAAiB,MAAMZ,OAAO,CAClC;AACEsB,MAAAA,IAAI,EAAE,QADR;AAEEX,MAAAA,IAAI,EAAE,YAFR;AAGEY,MAAAA,OAAO,EAAE,6CAHX;AAIEC,MAAAA,OAAO,EAAEtB;AAJX,KADkC,EAOlC,KAAKuB,YAP6B,CAApC;;AAUA,QAAI;AACF,YAAM,KAAKC,iBAAL,CAAuBrB,IAAvB,CAA4BO,UAA5B,CAAN;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAER,UAAU,CAACf,IAAK,2BAAnB,CAA8C8B,OAA1D;AACD,KAHD,CAGE,OAAOT,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAtEgE;;;;gBAA9C5B,2B,iBACE,IAAIsC,4BAAJ,CAAwB;AAC3CC,EAAAA,WAAW,EAFMvC,2BAEJ,CAAKwC,MAAL,CAAYC,OAAZ,CAAoBF;AADU,CAAxB,C;;gBADFvC,2B,uBAIQ,IAAI0C,kCAAJ,CAA8B;AACvDH,EAAAA,WAAW,EALMvC,2BAKJ,CAAKwC,MAAL,CAAYC,OAAZ,CAAoBF;AADsB,CAA9B,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport RichMenuListRequest from '../apis/rich-menu-list-request';\nimport RichMenuSetDefaultRequest from '../apis/rich-menu-set-default-request';\n\nexport default class RichmenuSetDefaultOperation extends Operation {\n  static listRequest = new RichMenuListRequest({\n    accessToken: this.config.channel.accessToken\n  });\n  static setDefaultRequest = new RichMenuSetDefaultRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Set a rich menu as default for all users'.help,\n        content: `richmenu default`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n\n    let richMenus = [];\n\n    try {\n      const response = await this.listRequest.send();\n\n      richMenus = response.data.richmenus\n        ? response.data.richmenus.map(menu => {\n            return {\n              title: `${menu.name} [${menu.richMenuId}]`,\n              description: `${menu.chatBarText} has ${menu.areas.length} areas`,\n              value: menu.richMenuId\n            };\n          })\n        : [];\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    if (!richMenus.length) {\n      console.log('Rich menu not found'.info);\n      return true;\n    }\n\n    const { richMenuId } = await prompts(\n      {\n        type: 'select',\n        name: 'richMenuId',\n        message: 'Select a rich menu as default for all users',\n        choices: richMenus\n      },\n      this.cancelOption\n    );\n\n    try {\n      await this.setDefaultRequest.send(richMenuId);\n      console.log(`${richMenuId.code} set as default rich menu`.success);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"richmenu-set-default-operation.js"}