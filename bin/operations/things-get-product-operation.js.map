{"version":3,"sources":["../../lib/operations/things-get-product-operation.js"],"names":["ThingsGetProductOperation","ThingsOperation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","deviceId","type","name","message","cancelOption","console","log","error","response","getRequest","send","data","logAxiosError","ThingsGetDeviceRequest","accessToken","config","channel"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;;;AAEe,MAAMA,yBAAN,SAAwCC,wBAAxC,CAAwD;AAKrD,aAALC,KAAK,GAAG;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,6DACLC,IAFL;AAGEC,MAAAA,OAAO,EAAG,oBAAD,CAAqBC;AAHhC,KADe,CAAjB;AAQA,WAAOJ,QAAP;AACD;;AAEe,eAAHK,GAAG,GAAG;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QACJ,CAAC,MAAMF,OAAO,CACZ;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,OAAO,EAAE;AAHX,KADY,EAMZ,KAAKC,YANO,CAAd,KAOM,EARR;;AAUA,QAAI,CAACJ,QAAL,EAAe;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BC,KAAxC;AACA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBV,QAArB,CAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACG,IAArB;AACD,KAHD,CAGE,OAAOJ,KAAP,EAAc;AACd,WAAKK,aAAL,CAAmBL,KAAnB;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAhDoE;;;;gBAAlDnB,yB,gBACC,IAAIyB,+BAAJ,CAA2B;AAC7CC,EAAAA,WAAW,EAFM1B,yBAEJ,CAAK2B,MAAL,CAAYC,OAAZ,CAAoBF;AADY,CAA3B,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\n\nimport ThingsOperation from './things-operation';\n\nimport ThingsGetDeviceRequest from '../apis/things-get-device-request';\n\nexport default class ThingsGetProductOperation extends ThingsOperation {\n  static getRequest = new ThingsGetDeviceRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Specify the device ID, and acquire the product ID and PSDI'\n          .help,\n        content: `things get:product`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n    const prompts = require('prompts');\n\n    const { deviceId } =\n      (await prompts(\n        {\n          type: 'text',\n          name: 'deviceId',\n          message: 'Device ID?'\n        },\n        this.cancelOption\n      )) || {};\n\n    if (!deviceId) {\n      console.log('Device ID cannot be empty'.error);\n      return false;\n    }\n\n    try {\n      const response = await this.getRequest.send(deviceId);\n      console.log(response.data);\n    } catch (error) {\n      this.logAxiosError(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"things-get-product-operation.js"}