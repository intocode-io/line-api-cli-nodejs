{"version":3,"sources":["../../lib/operations/things-get-devices-operation.js"],"names":["ThingsGetDevicesOperation","ThingsOperation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","productId","type","name","message","cancelOption","console","log","error","userId","response","getRequest","send","data","items","logAxiosError","ThingsGetDevicesByProductUserRequest","accessToken","config","channel"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;;;AAEe,MAAMA,yBAAN,SAAwCC,wBAAxC,CAAwD;AAKrD,aAALC,KAAK,GAAG;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,mDAAmDC,IAD7D;AAEEC,MAAAA,OAAO,EAAG,oBAAD,CAAqBC;AAFhC,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAEe,eAAHK,GAAG,GAAG;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAgB,OAAMF,OAAO,CACjC;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,OAAO,EAAE;AAHX,KADiC,EAMjC,KAAKC,YAN4B,CAAb,KAOjB,EAPL;;AASA,QAAI,CAACJ,SAAL,EAAgB;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BC,KAAzC;AACA,aAAO,KAAP;AACD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAa,OAAMV,OAAO,CAC9B;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,OAAO,EAAE;AAHX,KAD8B,EAM9B,KAAKC,YANyB,CAAb,KAOd,EAPL;;AASA,QAAI,CAACI,MAAL,EAAa;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,KAAtC;AACA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAME,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBX,SAArB,EAAgCQ,MAAhC,CAAvB;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACG,IAAT,CAAcC,KAA1B;AACD,KAJD,CAIE,OAAON,KAAP,EAAc;AACd,WAAKO,aAAL,CAAmBP,KAAnB;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AA7DoE;;;;gBAAlDnB,yB,gBACC,IAAI2B,6CAAJ,CAAyC;AAC3DC,EAAAA,WAAW,EAFM5B,yBAEJ,CAAK6B,MAAL,CAAYC,OAAZ,CAAoBF;AAD0B,CAAzC,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\n\nimport ThingsOperation from './things-operation';\n\nimport ThingsGetDevicesByProductUserRequest from '../apis/things-get-devices-by-product-user-request';\n\nexport default class ThingsGetDevicesOperation extends ThingsOperation {\n  static getRequest = new ThingsGetDevicesByProductUserRequest({\n    accessToken: this.config.channel.accessToken\n  });\n  \n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Get device information by product ID and user ID'.help,\n        content: `things get:devices`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n    const prompts = require('prompts');\n\n    const { productId } = await prompts(\n      {\n        type: 'text',\n        name: 'productId',\n        message: 'Product ID?'\n      },\n      this.cancelOption\n    ) || {};\n\n    if (!productId) {\n      console.log('Product ID cannot be empty'.error);\n      return false;\n    }\n\n    const { userId } = await prompts(\n      {\n        type: 'text',\n        name: 'userId',\n        message: 'User ID?'\n      },\n      this.cancelOption\n    ) || {};\n\n    if (!userId) {\n      console.log('User ID cannot be empty'.error);\n      return false;\n    }\n\n    try {\n      const response = await this.getRequest.send(productId, userId);\n\n      console.log(response.data.items);\n    } catch (error) {\n      this.logAxiosError(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"things-get-devices-operation.js"}