{"version":3,"sources":["../../lib/operations/liff-add-operation.js"],"names":["LIFFAddOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","viewType","type","name","message","choices","title","description","value","cancelOption","viewUrl","ble","initial","active","inactive","response","addRequest","send","view","url","features","console","log","data","liffId","success","error","LIFFAddRequest","accessToken","config","channel"],"mappings":"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","sourcesContent":["import { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport LIFFAddRequest from '../apis/liff-add-request';\n\nexport default class LIFFAddOperation extends Operation {\n  static addRequest = new LIFFAddRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Add a LIFF view'.help,\n        content: `liff add`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n\n    const { viewType } = await prompts(\n      {\n        type: 'select',\n        name: 'viewType',\n        message: 'Select view type',\n        choices: [\n          {\n            title: 'compact',\n            description: '50% of device screen height',\n            value: 'compact'\n          },\n          {\n            title: 'tall',\n            description: '80% of device screen height',\n            value: 'tall'\n          },\n          {\n            title: 'full',\n            description: '100% of device screen height',\n            value: 'full'\n          }\n        ]\n      },\n      this.cancelOption\n    );\n\n    if (!viewType) {\n      return false;\n    }\n\n    const { viewUrl } = await prompts(\n      {\n        type: 'text',\n        name: 'viewUrl',\n        message: 'View URL'\n      },\n      this.cancelOption\n    );\n\n    if (!viewUrl) {\n      return false;\n    }\n\n    const { description } = await prompts(\n      {\n        type: 'text',\n        name: 'description',\n        message: 'View description'\n      },\n      this.cancelOption\n    );\n\n    if (!description) {\n      return false;\n    }\n\n    const { ble } = await prompts(\n      {\n        type: 'toggle',\n        name: 'ble',\n        message:\n          'Is this LIFF app supports BluetoothÂ® Low Energy for LINE Things',\n        initial: false,\n        active: 'Yes',\n        inactive: 'No'\n      },\n      this.cancelOption\n    );\n\n    if (typeof ble === 'undefined') {\n      return false;\n    }\n\n    try {\n      const response = await this.addRequest.send({\n        view: {\n          type: viewType,\n          url: viewUrl\n        },\n        description,\n        features: {\n          ble\n        }\n      });\n\n      console.log(`Added LIFF ID ${response.data.liffId.code}`.success);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"liff-add-operation.js"}