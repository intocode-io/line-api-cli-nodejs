{"version":3,"sources":["../../lib/operations/line-token-operation.js"],"names":["LINETokenOperation","Operation","usage","sections","header","help","content","EOL","code","optionList","name","description","typeLabel","input","run","options","issue","revoke","ImageHelper","draw","console","log","require","config","channel","id","warn","configFileName","info","secret","accessToken","expiryDate","Date","response","issueRequest","send","data","access_token","setSeconds","expires_in","toLocaleString","error","prompts","save","type","message","initial","active","inactive","fs","writeFileSync","yaml","safeDump","revokeRequest","status","success","statusText","OAuthIssueTokenRequest","OAuthRevokeTokenRequest"],"mappings":"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","sourcesContent":["import { Section } from 'command-line-usage';\nimport fs from 'fs';\nimport { EOL } from 'os';\nimport yaml from 'js-yaml';\n\nimport Operation from './operation';\nimport OAuthIssueTokenRequest from '../apis/oauth-issue-token-request';\nimport OAuthRevokeTokenRequest from '../apis/oauth-revoke-token-request';\nimport ImageHelper from '../image-helper';\n\nexport default class LINETokenOperation extends Operation {\n  static issueRequest = new OAuthIssueTokenRequest();\n  static revokeRequest = new OAuthRevokeTokenRequest();\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Issue/Revoke access token '.help,\n        content:\n          `After channel ID and secret are configured. Issue a channel access token and save it.` +\n          EOL +\n          EOL +\n          `line token --issue`.code +\n          EOL +\n          EOL +\n          `In case you want to revoke an access token, you can run with --revoke option.` +\n          EOL +\n          EOL +\n          `line token --revoke`.code\n      },\n      {\n        header: 'Options',\n        optionList: [\n          {\n            name: 'issue'.code,\n            description:\n              'Issue a channel access token from pre-configured channel ID and secret'\n          },\n          {\n            name: 'revoke'.code,\n            typeLabel: '{underline accessToken}'.input,\n            description: 'Revoke a channel access token.'\n          }\n        ]\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run(options) {\n    if (!options || (options.issue !== true && options.revoke !== true)) {\n      await ImageHelper.draw('chick-helps');\n      console.log(require('command-line-usage')(this.usage));\n\n      return false;\n    }\n\n    if (!this.config.channel.id) {\n      console.log(`Channel ID not found`.warn);\n      console.log(\n        `Setup channel ID at ${this.configFileName.info} and re-run again`.help\n      );\n\n      return false;\n    }\n\n    if (!this.config.channel.secret) {\n      console.log(`Channel secret not found`.warn);\n      console.log(\n        `Setup channel secret at ${this.configFileName.info} and re-run again`\n          .help\n      );\n\n      return false;\n    }\n\n    if (options.issue === true) {\n      return this.issue();\n    } else { // `options.revoke` will be true due to the first if-condition in this `run` method\n      return this.revoke();\n    }\n  }\n\n  static async issue() {\n    let accessToken;\n    let expiryDate = new Date();\n\n    try {\n      const response = await this.issueRequest.send(\n        this.config.channel.id,\n        this.config.channel.secret\n      );\n\n      accessToken = response.data.access_token;\n      expiryDate.setSeconds(response.data.expires_in);\n\n      console.log(`Access token: ${accessToken.info}`.help);\n      console.log(`Expiry date: ${expiryDate.toLocaleString().info}`.help);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    const prompts = require('prompts');\n    const { save } = await prompts({\n      type: 'toggle',\n      name: 'save',\n      message: 'Overwrite short-lived access token to configuration file?',\n      initial: false,\n      active: 'Yes',\n      inactive: 'No'\n    });\n\n    if (save) {\n      const config = {\n        ...this.config\n      };\n\n      config.channel.accessToken = accessToken;\n      fs.writeFileSync(`./${this.configFileName}`, yaml.safeDump(config));\n    }\n\n    return true;\n  }\n\n  static async revoke() {\n    const prompts = require('prompts');\n    const { accessToken } = await prompts({\n      type: 'text',\n      name: 'accessToken',\n      message: 'Paste access token you want to revoke here'\n    });\n\n    if (!accessToken) {\n      return false;\n    }\n\n    try {\n      const response = await this.revokeRequest.send(accessToken);\n\n      if (response.status === 200) {\n        console.log('Revoked'.success);\n        return true;\n      } else {\n        console.log(`Response with status ${response.status}`.warn);\n        return false;\n      }\n    } catch (error) {\n      console.error(`${error.response.statusText} or invalid token`.error);\n      return false;\n    }\n  }\n}\n"],"file":"line-token-operation.js"}