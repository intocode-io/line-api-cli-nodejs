{"version":3,"sources":["../../lib/operations/richmenu-link-operation.js"],"names":["RichmenuLinkOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","richMenus","response","listRequest","send","data","richmenus","map","menu","title","name","richMenuId","description","chatBarText","areas","length","value","error","console","log","info","richMenu","type","message","choices","cancelOption","userId","linkUserRequest","success","RichMenuListRequest","accessToken","config","channel","RichMenuLinkUserRequest"],"mappings":"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","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport RichMenuListRequest from '../apis/rich-menu-list-request';\nimport RichMenuLinkUserRequest from '../apis/rich-menu-link-user-request';\n\nexport default class RichmenuLinkOperation extends Operation {\n  static listRequest = new RichMenuListRequest({\n    accessToken: this.config.channel.accessToken\n  });\n  static linkUserRequest = new RichMenuLinkUserRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Link a rich menu to a user'.help,\n        content: `richmenu link`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n\n    let richMenus = [];\n\n    try {\n      const response = await this.listRequest.send();\n\n      richMenus = response.data.richmenus\n        ? response.data.richmenus.map(menu => {\n            return {\n              title: `${menu.name} [${menu.richMenuId}]`,\n              description: `${menu.chatBarText} has ${menu.areas.length} areas`,\n              value: menu\n            };\n          })\n        : [];\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    if (!richMenus.length) {\n      console.log('Rich menu not found'.info);\n      return true;\n    }\n\n    /** @type {{richMenu:RichMenuData}} */\n    const { richMenu } = await prompts(\n      {\n        type: 'select',\n        name: 'richMenu',\n        message: 'Select a rich menu for a user',\n        choices: richMenus\n      },\n      this.cancelOption\n    );\n\n    if (!richMenu) {\n      return false;\n    }\n\n    const { userId } = await prompts(\n      {\n        type: 'text',\n        name: 'userId',\n        message: `Link ${richMenu.name} to which user ID`\n      },\n      this.cancelOption\n    );\n\n    if (!userId) {\n      return false;\n    }\n\n    try {\n      await this.linkUserRequest.send(richMenu.richMenuId, userId);\n      console.log(\n        `${richMenu.name.code} [${richMenu.richMenuId}] is now visible to user ID ${userId.code}`\n          .success\n      );\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"richmenu-link-operation.js"}