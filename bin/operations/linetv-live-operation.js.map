{"version":3,"sources":["../../lib/operations/linetv-live-operation.js"],"names":["LINETvLiveOperation","Operation","usage","sections","header","help","content","EOL","code","optionList","name","description","validateCountryCode","countryCode","length","run","options","validateConfig","prompts","require","channelId","config","channel","id","type","message","prompt","validate","cancelOption","response","request","send","data","body","console","log","warn","format","JSON","stringify","liveSchdule","lives","map","item","columnHeader","success","liveNo","channelName","liveTitle","liveStatus","liveStartDate","serviceUrl","table","error","logAxiosError","LINETvLiveRequest","accessToken"],"mappings":"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","sourcesContent":["import '../typedef';\nimport 'console.table';\nimport { Section } from 'command-line-usage';\nimport { EOL } from 'os';\nimport Operation from './operation';\nimport LINETvLiveRequest from '../apis/linetv-live-request';\n\nexport default class LINETvLiveOperation extends Operation {\n  static request = new LINETvLiveRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Gets live schedule information'.help,\n        content:\n          `To display live schedule in table` +\n          EOL +\n          EOL +\n          `linetv live`.code +\n          EOL +\n          EOL +\n          `To get live schedule data in JSON format, you can run with --format option.` +\n          EOL +\n          EOL +\n          `linetv live --format json`.code\n      },\n      {\n        header: 'Options',\n        optionList: [\n          {\n            name: 'format'.code,\n            description: 'To get data in JSON format'\n          }\n        ]\n      }\n    ];\n\n    return sections;\n  }\n\n  static validateCountryCode(countryCode) {\n    return countryCode.length !== 2\n      ? 'Please input ISO 3166-2 (2 characters)'\n      : true;\n  }\n\n  static async run(options) {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n    const channelId = this.config.channel.id;\n\n    const { countryCode } =\n      (await prompts(\n        {\n          type: 'text',\n          name: 'countryCode',\n          message: `Country Code ${'ISO 3166-2'.prompt}`,\n          validate: this.validateCountryCode\n        },\n        this.cancelOption\n      ));\n\n    try {\n      /** @type {import('axios').AxiosResponse<LINETvLiveResponseData>} */\n      const response = await this.request.send(channelId, countryCode);\n\n      if (!response.data || response.data.body === null) {\n        console.log('Cannot find live schdule'.warn);\n        return true;\n      }\n\n      if (options.format === 'json') {\n        console.log(JSON.stringify(response.data, null, 2));\n        return true;\n      }\n\n      const liveSchdule = response.data.body.lives.map(item => {\n        const columnHeader = {};\n        columnHeader['Live No'.success] = item.liveNo;\n        columnHeader['Channel Name'.success] = item.channelName;\n        columnHeader['Title'.success] = item.liveTitle;\n        columnHeader['Status'.success] = item.liveStatus;\n        columnHeader['Start'.success] = item.liveStartDate;\n        columnHeader['URL'.success] = item.serviceUrl;\n        return columnHeader;\n      });\n      console.table(liveSchdule);\n    } catch (error) {\n      this.logAxiosError(error);\n      return false;\n    }\n    return true;\n  }\n}\n"],"file":"linetv-live-operation.js"}