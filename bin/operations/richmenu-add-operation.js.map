{"version":3,"sources":["../../lib/operations/richmenu-add-operation.js"],"names":["RichmenuAddOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","prompts","require","dataFilePath","type","name","message","validate","validateFileExists","cancelOption","path","isAbsolute","resolve","imageFilePath","richMenuId","response","addRequest","send","data","console","log","success","error","uploadRequest","RichMenuAddRequest","accessToken","config","channel","RichMenuUploadRequest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,oBAAN,SAAmCC,kBAAnC,CAA6C;AAS1C,aAALC,KAAK,GAAG;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,kBAAkBC,IAD5B;AAEEC,MAAAA,OAAO,EAAG,cAAD,CAAeC;AAF1B,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAEe,eAAHK,GAAG,GAAG;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AAEA;;;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAmB,MAAMF,OAAO,CAClC;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,OAAO,EAAE,sBAHX;AAIEC,MAAAA,QAAQ,EAAE,KAAKC;AAJjB,KADkC,EAOlC,KAAKC,YAP6B,CAApC;;AAUA,QAAI,CAACN,YAAL,EAAmB;AACjB,aAAO,KAAP;AACD;;AAED,QAAI,CAACO,cAAKC,UAAL,CAAgBR,YAAhB,CAAL,EAAoC;AAClCA,MAAAA,YAAY,GAAGO,cAAKE,OAAL,CAAa,IAAb,EAAmBT,YAAnB,CAAf;AACD;AAED;;;AACA,QAAI;AAAEU,MAAAA;AAAF,QAAoB,MAAMZ,OAAO,CACnC;AACEG,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,eAFR;AAGEC,MAAAA,OAAO,EAAE,uBAHX;AAIEC,MAAAA,QAAQ,EAAE,KAAKC;AAJjB,KADmC,EAOnC,KAAKC,YAP8B,CAArC;;AAUA,QAAI,CAACI,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM,KAAKC,UAAL,CAAgBC,IAAhB,CAAqBf,OAAO,CAACC,YAAD,CAA5B,CAAvB;AACAW,MAAAA,UAAU,GAAGC,QAAQ,CAACG,IAAT,CAAcJ,UAA3B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBN,UAAU,CAAChB,IAAK,EAAjC,CAAmCuB,OAA/C;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAM,KAAKC,aAAL,CAAmBN,IAAnB,CAAwBH,UAAxB,EAAoCD,aAApC,CAAN;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAa,0BAAD,CAA2BC,OAAvC;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAlFyD;;;;gBAAvC/B,oB,gBACC,IAAIiC,2BAAJ,CAAuB;AACzCC,EAAAA,WAAW,EAFMlC,oBAEJ,CAAKmC,MAAL,CAAYC,OAAZ,CAAoBF;AADQ,CAAvB,C;;gBADDlC,oB,mBAKI,IAAIqC,8BAAJ,CAA0B;AAC/CH,EAAAA,WAAW,EANMlC,oBAMJ,CAAKmC,MAAL,CAAYC,OAAZ,CAAoBF;AADc,CAA1B,C","sourcesContent":["import { Section } from 'command-line-usage';\nimport path from 'path';\nimport Operation from './operation';\nimport RichMenuAddRequest from '../apis/rich-menu-add-request';\nimport RichMenuUploadRequest from '../apis/rich-menu-upload-request';\n\nexport default class RichmenuAddOperation extends Operation {\n  static addRequest = new RichMenuAddRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static uploadRequest = new RichMenuUploadRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'Add a rich menu'.help,\n        content: `richmenu add`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    const prompts = require('prompts');\n\n    /** @type {{ dataFilePath:string }} */\n    let { dataFilePath } = await prompts(\n      {\n        type: 'text',\n        name: 'dataFilePath',\n        message: 'Input data file path',\n        validate: this.validateFileExists\n      },\n      this.cancelOption\n    );\n\n    if (!dataFilePath) {\n      return false;\n    }\n    \n    if (!path.isAbsolute(dataFilePath)) {\n      dataFilePath = path.resolve('./', dataFilePath);\n    }\n\n    /** @type {{ imageFilePath:string }} */\n    let { imageFilePath } = await prompts(\n      {\n        type: 'text',\n        name: 'imageFilePath',\n        message: 'Input image file path',\n        validate: this.validateFileExists\n      },\n      this.cancelOption\n    );\n\n    if (!imageFilePath) {\n      return false;\n    }\n\n    let richMenuId = '';\n\n    try {\n      const response = await this.addRequest.send(require(dataFilePath));\n      richMenuId = response.data.richMenuId;\n      console.log(`Rich menu ID: ${richMenuId.code}`.success);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    try {\n      await this.uploadRequest.send(richMenuId, imageFilePath);\n      console.log(`Rich menu image uploaded`.success);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"file":"richmenu-add-operation.js"}