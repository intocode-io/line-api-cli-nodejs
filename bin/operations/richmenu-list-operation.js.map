{"version":3,"sources":["../../lib/operations/richmenu-list-operation.js"],"names":["RichmenuListOperation","Operation","usage","sections","header","help","content","code","run","validateConfig","richMenus","response","listRequest","send","data","richmenus","error","console","length","log","info","table","map","menu","row","success","richMenuId","name","chatBarText","size","width","height","areas","selected","RichMenuListRequest","accessToken","config","channel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,qBAAN,SAAoCC,kBAApC,CAA8C;AAK3D,aAAWC,KAAX,GAAmB;AACjB;AACA,UAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,MAAM,EAAE,kBAAkBC,IAD5B;AAEEC,MAAAA,OAAO,EAAG,eAAD,CAAgBC;AAF3B,KADe,CAAjB;AAOA,WAAOJ,QAAP;AACD;;AAED,eAAaK,GAAb,GAAmB;AACjB,QAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,QAAIC,SAAJ;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM,KAAKC,WAAL,CAAiBC,IAAjB,EAAvB;AAEAH,MAAAA,SAAS,GAAGC,QAAQ,CAACG,IAAT,CAAcC,SAA1B;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAO,KAAP;AACD;;AAED,QAAI,CAACN,SAAD,IAAcA,SAAS,CAACQ,MAAV,KAAqB,CAAvC,EAA0C;AACxCD,MAAAA,OAAO,CAACE,GAAR,CAAY,sBAAsBC,IAAlC;AACA,aAAO,IAAP;AACD;;AAEDH,IAAAA,OAAO,CAACI,KAAR,CACEX,SAAS,CAACY,GAAV,CAAcC,IAAI,IAAI;AACpB,YAAMC,GAAG,GAAG,EAAZ;AAEAA,MAAAA,GAAG,CAAC,eAAeC,OAAhB,CAAH,GAA8BF,IAAI,CAACG,UAAnC;AACAF,MAAAA,GAAG,CAAC,OAAOC,OAAR,CAAH,GAAsBF,IAAI,CAACI,IAA3B;AACAH,MAAAA,GAAG,CAAC,WAAWC,OAAZ,CAAH,GAA0BF,IAAI,CAACK,WAA/B;AACAJ,MAAAA,GAAG,CAAC,OAAOC,OAAR,CAAH,GAAuB,GAAEF,IAAI,CAACM,IAAL,CAAUC,KAAM,IAAGP,IAAI,CAACM,IAAL,CAAUE,MAAO,EAA7D;AACAP,MAAAA,GAAG,CAAC,eAAeC,OAAhB,CAAH,GAA8BF,IAAI,CAACS,KAAL,CAAWd,MAAzC;AACAM,MAAAA,GAAG,CAAC,WAAWC,OAAZ,CAAH,GAA0BF,IAAI,CAACU,QAA/B;AAEA,aAAOT,GAAP;AACD,KAXD,CADF;AAeA,WAAO,IAAP;AACD;;AAtD0D;;;;gBAAxCxB,qB,iBACE,IAAIkC,4BAAJ,CAAwB;AAC3CC,EAAAA,WAAW,EAFMnC,qBAEJ,CAAKoC,MAAL,CAAYC,OAAZ,CAAoBF;AADU,CAAxB,C","sourcesContent":["import 'console.table';\nimport { Section } from 'command-line-usage';\nimport Operation from './operation';\nimport RichMenuListRequest from '../apis/rich-menu-list-request';\n\nexport default class RichmenuListOperation extends Operation {\n  static listRequest = new RichMenuListRequest({\n    accessToken: this.config.channel.accessToken\n  });\n\n  static get usage() {\n    /** @type {Section[]} */\n    const sections = [\n      {\n        header: 'List rich menus'.help,\n        content: `richmenu list`.code\n      }\n    ];\n\n    return sections;\n  }\n\n  static async run() {\n    if (!this.validateConfig()) {\n      return false;\n    }\n\n    let richMenus;\n\n    try {\n      const response = await this.listRequest.send();\n\n      richMenus = response.data.richmenus;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    if (!richMenus || richMenus.length === 0) {\n      console.log('Rich menu not found'.info);\n      return true;\n    }\n\n    console.table(\n      richMenus.map(menu => {\n        const row = {};\n\n        row['Rich menu ID'.success] = menu.richMenuId;\n        row['Name'.success] = menu.name;\n        row['Bar text'.success] = menu.chatBarText;\n        row['Size'.success] = `${menu.size.width}x${menu.size.height}`;\n        row['No. of Areas'.success] = menu.areas.length;\n        row['Selected'.success] = menu.selected;\n        \n        return row;\n      })\n    );\n\n    return true;\n  }\n}\n"],"file":"richmenu-list-operation.js"}