{"version":3,"sources":["../../lib/apis/linetv-ranking-request.js"],"names":["LINETvRankingRequest","LINETvRequest","constructor","options","endpoint","send","channelId","countryCode","page","countPerPage","axios","get"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,oBAAN,SAAmCC,sBAAnC,CAAiD;AAC9DC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AAEA,SAAKC,QAAL,GAAiB,GAAE,KAAKA,QAAS,UAAjC;AACD;AACD;;;;;;;;;AAOAC,EAAAA,IAAI,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,IAAI,GAAC,CAA9B,EAAiCC,YAAY,GAAC,EAA9C,EAAkD;AACpD,WAAO,KAAKC,KAAL,CAAWC,GAAX,CACJ,GAAE,KAAKP,QAAS,uBAAsBE,SAAU,YAAWC,WAAY,SAAQC,IAAK,iBAAgBC,YAAa,EAD7G,CAAP;AAGD;;AAjB6D","sourcesContent":["import LINETvRequest from './linetv-request';\n\nexport default class LINETvRankingRequest extends LINETvRequest {\n  constructor(options) {\n    super(options);\n\n    this.endpoint = `${this.endpoint}/ranking`;\n  }\n  /**\n   * @param {number} channelId\n   * @param {string} countryCode\n   * @param {number} page\n   * @param {number} countPerPage\n   * @return {AxiosResponse<LINETvRankingResponseData>}\n   */\n  send(channelId, countryCode, page=1, countPerPage=10) {\n    return this.axios.get(\n      `${this.endpoint}/clip?lineChannelId=${channelId}&country=${countryCode}&page=${page}&countPerPage=${countPerPage}`\n    );\n  }\n}\n\n"],"file":"linetv-ranking-request.js"}