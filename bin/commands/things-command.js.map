{"version":3,"sources":["../../lib/commands/things-command.js"],"names":["ThingsCommand","Command","getCommandLineArgs","commandLineArgs","require","operation","_unknown","name","defaultOption","stopAtFirstUnknown","argv","options","alias","type","Boolean","cli","colors","setTheme","theme","help","commandLineUsage","ImageHelper","draw","console","log","ThingsListTrialOperation","usage","ThingsAddTrialOperation","ThingsRemoveTrialOperation","ThingsGetDeviceOperation","ThingsGetDevicesOperation","ThingsGetProductOperation","ThingsRegisterScenarioSetOperation","ThingsGetScenarioSetOperation","ThingsRemoveScenarioSetOperation","process","exit","version","versionText","run","code","warn","error"],"mappings":"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","sourcesContent":["import '../typedef';\n\nimport colors from 'colors';\n\nimport Command from './command';\nimport ImageHelper from '../image-helper';\nimport theme from '../theme';\n\nimport ThingsAddTrialOperation from '../operations/things-add-trial-operation';\nimport ThingsGetDeviceOperation from '../operations/things-get-device-operation';\nimport ThingsGetDevicesOperation from '../operations/things-get-devices-operation';\nimport ThingsGetProductOperation from '../operations/things-get-product-operation';\nimport ThingsGetScenarioSetOperation from '../operations/things-get-scenario-set-operation';\nimport ThingsListTrialOperation from '../operations/things-list-trial-operation';\nimport ThingsRegisterScenarioSetOperation from '../operations/things-register-scenario-set-operation';\nimport ThingsRemoveScenarioSetOperation from '../operations/things-remove-scenario-set-operation';\nimport ThingsRemoveTrialOperation from '../operations/things-remove-trial-operation';\n\nexport default class ThingsCommand extends Command {\n  /**\n   * @return {operation:string, options: ThingsCommandOptions, _unknown: Array<string>}\n   */\n  static getCommandLineArgs() {\n    const commandLineArgs = require('command-line-args');\n\n    const { operation, _unknown } = commandLineArgs(\n      [{ name: 'operation', defaultOption: true }],\n      { stopAtFirstUnknown: true }\n    );\n    const argv = _unknown || [];\n    const options = commandLineArgs(\n      [\n        { name: 'help', alias: 'h', type: Boolean },\n        { name: 'version', alias: 'v', type: Boolean }\n      ],\n      { argv }\n    );\n\n    return { operation, options, _unknown };\n  }\n\n  static async cli() {\n    try {\n      colors.setTheme(theme);\n\n      const { operation, options } = this.getCommandLineArgs();\n\n      if (options.help) {\n        const commandLineUsage = require('command-line-usage');\n\n        await ImageHelper.draw('chick-helps');\n\n        switch (operation) {\n          case 'list:trial':\n            console.log(commandLineUsage(ThingsListTrialOperation.usage));\n            break;\n          case 'add:trial':\n            console.log(commandLineUsage(ThingsAddTrialOperation.usage));\n            break;\n          case 'remove:trial':\n            console.log(commandLineUsage(ThingsRemoveTrialOperation.usage));\n            break;\n          case 'get:device':\n            console.log(commandLineUsage(ThingsGetDeviceOperation.usage));\n            break;\n          case 'get:devices':\n            console.log(commandLineUsage(ThingsGetDevicesOperation.usage));\n            break;\n          case 'get:product':\n            console.log(commandLineUsage(ThingsGetProductOperation.usage));\n            break;\n          case 'register:scenario-set':\n            console.log(commandLineUsage(ThingsRegisterScenarioSetOperation.usage));\n            break;\n          case 'get:scenario-set':\n            console.log(commandLineUsage(ThingsGetScenarioSetOperation.usage));\n            break;\n          case 'remove:scenario-set':\n            console.log(commandLineUsage(ThingsRemoveScenarioSetOperation.usage));\n            break;\n          default:\n            console.log(\n              commandLineUsage([\n                ...ThingsListTrialOperation.usage,\n                ...ThingsAddTrialOperation.usage,\n                ...ThingsRemoveTrialOperation.usage,\n                ...ThingsGetDeviceOperation.usage,\n                ...ThingsGetDevicesOperation.usage,\n                ...ThingsGetProductOperation.usage,\n                ...ThingsRegisterScenarioSetOperation.usage,\n                ...ThingsRemoveScenarioSetOperation.usage,\n                ...ThingsGetScenarioSetOperation.usage\n              ])\n            );\n        }\n        process.exit(0);\n        return;\n      }\n\n      if (options.version) {\n        await ImageHelper.draw('chick-helps');\n        console.log(this.versionText);\n        process.exit(0);\n        return;\n      }\n\n      if (operation === 'list:trial') {\n        await ThingsListTrialOperation.run();\n      } else if (operation === 'add:trial') {\n        await ThingsAddTrialOperation.run();\n      } else if (operation === 'remove:trial') {\n        await ThingsRemoveTrialOperation.run();\n      } else if (operation === 'get:device') {\n        await ThingsGetDeviceOperation.run();\n      } else if (operation === 'get:devices') {\n        await ThingsGetDevicesOperation.run();\n      } else if (operation === 'get:product') {\n        await ThingsGetProductOperation.run();\n      } else if (operation === 'register:scenario-set') {\n        await ThingsRegisterScenarioSetOperation.run();\n      } else if (operation === 'remove:scenario-set') {\n        await ThingsRemoveScenarioSetOperation.run();\n      } else if (operation === 'get:scenario-set') {\n        await ThingsGetScenarioSetOperation.run();\n      } else {\n        await ImageHelper.draw('chick-helps');\n        console.log(\n          `Unknown operation: ${(operation || 'undefined').code}`.warn\n        );\n      }\n      return;\n    } catch (error) {\n      await ImageHelper.draw('chick-helps');\n      console.error(error);\n      process.exit(1);\n      return;\n    }\n  }\n}\n"],"file":"things-command.js"}