{"version":3,"sources":["../../lib/commands/linetv-command.js"],"names":["LINETvCommand","Command","getCommandLineArgs","commandLineArgs","require","operation","_unknown","name","defaultOption","stopAtFirstUnknown","argv","options","alias","type","Boolean","String","cli","colors","setTheme","theme","help","commandLineUsage","ImageHelper","draw","console","log","LINETvListModulesOperation","usage","LINETvGetSportlightOperation","process","exit","version","versionText","run","code","warn","error"],"mappings":"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","sourcesContent":["import '../typedef';\n\nimport colors from 'colors';\n\nimport Command from './command';\nimport ImageHelper from '../image-helper';\nimport theme from '../theme';\n\nimport LINETvListModulesOperation from '../operations/linetv-list-modules-operation';\nimport LINETvGetSportlightOperation from '../operations/linetv-get-sportlight-operation';\n\nexport default class LINETvCommand extends Command {\n  /**\n   * @return {operation:string, options:LINETvCommandOptions, _unknown: Array<string>}\n   */\n  static getCommandLineArgs() {\n    const commandLineArgs = require('command-line-args');\n\n    const { operation, _unknown } = commandLineArgs(\n      [{ name: 'operation', defaultOption: true }],\n      { stopAtFirstUnknown: true }\n    );\n    const argv = _unknown || [];\n    const options = commandLineArgs(\n      [\n        { name: 'help', alias: 'h', type: Boolean },\n        { name: 'version', alias: 'v', type: Boolean },\n        { name: 'format', type: String }\n      ],\n      { argv }\n    );\n\n    return { operation, options, _unknown };\n  }\n\n  static async cli() {\n    try {\n      colors.setTheme(theme);\n\n      const { operation, options } = this.getCommandLineArgs();\n\n      if (options.help) {\n        const commandLineUsage = require('command-line-usage');\n\n        await ImageHelper.draw('chick-helps');\n\n        switch (operation) {\n          case 'list:modules':\n            console.log(commandLineUsage(LINETvListModulesOperation.usage));\n            break;\n          case 'get:spotlight':\n            console.log(commandLineUsage(LINETvGetSportlightOperation.usage));\n            break;\n\n          default:\n            console.log(\n              commandLineUsage([\n                ...LINETvListModulesOperation.usage,\n                ...LINETvGetSportlightOperation.usage\n              ])\n            );\n        }\n        process.exit(0);\n        return;\n      }\n\n      if (options.version) {\n        await ImageHelper.draw('chick-helps');\n        console.log(this.versionText);\n        process.exit(0);\n        return;\n      }\n\n      if (operation === 'list:modules') {\n        await LINETvListModulesOperation.run();\n      } else if (operation === 'get:spotlight') {\n        await LINETvGetSportlightOperation.run(options);\n      } else {\n        await ImageHelper.draw('chick-helps');\n        console.log(\n          `Unknown operation: ${(operation || 'undefined').code}`.warn\n        );\n      }\n      return;\n    } catch (error) {\n      await ImageHelper.draw('chick-helps');\n      console.error(error);\n      process.exit(1);\n      return;\n    }\n  }\n}\n"],"file":"linetv-command.js"}